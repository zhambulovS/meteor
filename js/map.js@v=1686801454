//document.addEventListener('DOMContentLoaded', ready);
const map = {
    _map: null,
    _points: {},
    addPoint: function(lat, long, desc) {
        this._points.push({
            coords: [lat, long],
            desc: desc
        });
    },
    drawFromUrl: function(url) {
        let self = this;

        this.draw();

        $.get(url, function (data) {
            self.setCoordinates(data);
        });

        return false;
    },
    draw: function() {
        let self = this;

        if (this._map === null) {
            this._map = new ymaps.Map('map', {
                center: [48, 68],
                zoom: 8,
                //type: 'yandex#map',
                controls: ['zoomControl', 'typeSelector', 'fullscreenControl']
            });
        }

    },

    clearCoordinates: function () {
        this._map.geoObjects.removeAll();
    },

    setCoordinates: function (data) {
        let self = this;

        this.clearCoordinates();

        let clusterer = new ymaps.Clusterer({

            preset: 'islands#invertedNightClusterIcons',

            groupByCoordinates: false,

            clusterDisableClickZoom: false,
            clusterHideIconOnBalloonOpen: false,
            geoObjectHideIconOnBalloonOpen: false,
            //maxZoom: zoom

        });

        if (data.length > 0) {

            $.each(data, function (key, item) {
                if (key === 0) {
                    ///console.log(item.lat, item.lng);
                    self._map.setCenter([item.lat, item.lng]);
                }
                let marker = new ymaps.Placemark([item.lat, item.lng], {
                    hintContent: item.name,
                    id: item.id
                }, {
                    iconLayout: 'default#image',
                    iconImageHref: item.photo,
                    iconImageSize: [36, 36]
                });

                marker.events.add('click', function () {
                    //let school_id = marker.properties._data.id;
                    window.open(item.link);
                });

                clusterer.add(marker);
            });
            self._map.geoObjects.add(clusterer);

            return false;
        }

        return false;
    },
};
function ready() {
    // Карта
    if (ymaps) {
        ymaps.ready(function () {
            var myMap = new ymaps.Map('map', {
                    center: [55.751574, 37.573856],
                    zoom: 9,
                    controls: [] // Убрать элементы управления картой
                }, {
                    searchControlProvider: 'yandex#search'
                }),
                /**
                 * Создадим кластеризатор, вызвав функцию-конструктор.
                 * Список всех опций доступен в документации.
                 * @see https://api.yandex.ru/maps/doc/jsapi/2.1/ref/reference/Clusterer.xml#constructor-summary
                 */
                clusterer = new ymaps.Clusterer({

                    preset: 'islands#invertedBlueClusterIcons',
                    groupByCoordinates: false
                    // Эта опция отвечает за размеры кластеров.
                    // В данном случае для кластеров, содержащих до 100 элементов,
                    // будет показываться маленькая иконка. Для остальных - большая.
                    // clusterNumbers: [10],
                    // clusterIconContentLayout: null
                }),
                /**
                 * Функция возвращает объект, содержащий данные метки.
                 * Поле данных clusterCaption будет отображено в списке геообъектов в балуне кластера.
                 * Поле balloonContentBody - источник данных для контента балуна.
                 * Оба поля поддерживают HTML-разметку.
                 * Список полей данных, которые используют стандартные макеты содержимого иконки метки
                 * и балуна геообъектов, можно посмотреть в документации.
                 * @see https://api.yandex.ru/maps/doc/jsapi/2.1/ref/reference/GeoObject.xml
                 */
                getPointData = function (index) {
                    return {
                        balloonContentBody: 'Секция бокса',
                        clusterCaption: 'метка <strong>' + index + '</strong>'
                    };
                },
                /**
                 * Функция возвращает объект, содержащий опции метки.
                 * Все опции, которые поддерживают геообъекты, можно посмотреть в документации.
                 * @see https://api.yandex.ru/maps/doc/jsapi/2.1/ref/reference/GeoObject.xml
                 */
                getPointOptions = function () {
                    return {
                        preset: 'islands#blueIcon'
                    };
                },
                points = [
                    [55.744522, 37.616378], [55.780898, 37.642889], [55.793559, 37.435983], [55.800584, 37.675638], [55.716733, 37.589988], [55.775724, 37.560840], [55.822144, 37.433781], [55.874170, 37.669838], [55.716770, 37.482338], [55.780850, 37.750210], [55.810906, 37.654142], [55.865386, 37.713329], [55.847121, 37.525797], [55.778655, 37.710743], [55.623415, 37.717934], [55.863193, 37.737000], [55.866770, 37.760113], [55.698261, 37.730838], [55.633800, 37.564769], [55.639996, 37.539400], [55.690230, 37.405853], [55.775970, 37.512900], [55.775777, 37.442180], [55.811814, 37.440448], [55.751841, 37.404853], [55.627303, 37.728976], [55.816515, 37.597163], [55.664352, 37.689397], [55.679195, 37.600961], [55.673873, 37.658425], [55.681006, 37.605126], [55.876327, 37.431744], [55.843363, 37.778445], [55.875445, 37.549348], [55.662903, 37.702087], [55.746099, 37.434113], [55.838660, 37.712326], [55.774838, 37.415725], [55.871539, 37.630223], [55.657037, 37.571271], [55.691046, 37.711026], [55.803972, 37.659610], [55.616448, 37.452759], [55.781329, 37.442781], [55.844708, 37.748870], [55.723123, 37.406067], [55.858585, 37.484980]
                ],
                geoObjects = [];


            /**
             * Данные передаются вторым параметром в конструктор метки, опции - третьим.
             * @see https://api.yandex.ru/maps/doc/jsapi/2.1/ref/reference/Placemark.xml#constructor-summary
             */
            for (var i = 0, len = points.length; i < len; i++) {
                geoObjects[i] = new ymaps.Placemark(points[i], getPointData(i), getPointOptions());
            }

            /**
             * В кластеризатор можно добавить javascript-массив меток (не геоколлекцию) или одну метку.
             * @see https://api.yandex.ru/maps/doc/jsapi/2.1/ref/reference/Clusterer.xml#add
             */
            myMap.controls.add(new ymaps.control.ZoomControl()); // Добавление элемента управления карты - кнопки зума
            clusterer.add(geoObjects);
            myMap.geoObjects.add(clusterer);

            /**
             * Спозиционируем карту так, чтобы на ней были видны все объекты.
             */
            myMap.setBounds(clusterer.getBounds(), {
                checkZoomRange: true
            });
        });
    }
}